import hou 
import os 

#this should be updated to act on all nodes of types pxrtexture pxrnormalmap.
#but i do not have time to figure out how to do that rn 
#alas
#one day.
#in the meantime, lo siento
#and make sure your nodes are named precisely

stageNodes = hou.node("/stage/").children()
matLibNodes = []

for node in stageNodes:
    if(node.name().startswith("pxr")):
        matLibNodes.append(node)
        #print(matLibNodes)
for matLibNode in matLibNodes:
    #print(matLibNode)
    matLibLoc = "/stage/"+str(matLibNode)+"/"
    #print(matLibLoc)
    
    diffuseColor = hou.node(matLibLoc + "diffuse_color_pxrtexture")
    print(diffuseColor)
    specFaceColor = hou.node(matLibLoc + "spec_face_color_pxrtexture")
    specRoughness = hou.node(matLibLoc + "spec_roughness_pxrtexture")
    normal = hou.node(matLibLoc + "normal_map")
    displacement = hou.node(matLibLoc + "displacement_pxrtexture")
    mask = hou.node(matLibLoc + "mask_pxrtexture")
    
    def updateTex(texType):
        ogFilename = texType.parm("filename").eval()
        if(".png.tex" not in ogFilename):
            #UDIM replace 
            if("UDIM" in ogFilename):
                splitIndex = ogFilename.fine(".10")
                newFilename = ogFilename[:splitIndex] + "_srgbtex_acescg.<UDIM>.png.tex")
            #default replace 
            elif("UDIM" not in ogFilename): 
                newFilename = ogFilename.replace(".png","_srgbtex_acescg.png.tex")
                texType.parm("filename").set(newFilename)
    
    updateTex(diffuseColor)
    updateTex(specFaceColor)
    updateTex(specRoughness)
    updateTex(normal)
    updateTex(displacement)
    #if(mask exists)
    if((hou.node(matLibLoc + "mask_pxrtexture") != None)):
        updateTex(mask)
